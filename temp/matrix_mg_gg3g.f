      SUBROUTINE SMATRIX_MG_gg3g(P,ANS)
C     
C     Generated by MadGraph 5 v. 1.3.17, 2011-09-30
C     By the MadGraph Development Team
C     Please visit us at https://launchpad.net/madgraph5
C     
C     MadGraph StandAlone Version
C     
C     Returns amplitude squared summed/avg over colors
C     and helicities
C     for the point in phase space P(0:3,NEXTERNAL)
C     
C     Process: g g > g g g WEIGHTED=3
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
      INTEGER                 NCOMB
      PARAMETER (             NCOMB=32)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
C     
C     LOCAL VARIABLES 
C     
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T
      REAL*8 MATRIX_MG
      INTEGER IHEL,IDEN, I
      INTEGER JC(NEXTERNAL)
      LOGICAL GOODHEL(NCOMB)
      DATA NTRY/0/
      DATA GOODHEL/NCOMB*.FALSE./
      DATA (NHEL(I,   1),I=1,5) /-1,-1,-1,-1,-1/
      DATA (NHEL(I,   2),I=1,5) /-1,-1,-1,-1, 1/
      DATA (NHEL(I,   3),I=1,5) /-1,-1,-1, 1,-1/
      DATA (NHEL(I,   4),I=1,5) /-1,-1,-1, 1, 1/
      DATA (NHEL(I,   5),I=1,5) /-1,-1, 1,-1,-1/
      DATA (NHEL(I,   6),I=1,5) /-1,-1, 1,-1, 1/
      DATA (NHEL(I,   7),I=1,5) /-1,-1, 1, 1,-1/
      DATA (NHEL(I,   8),I=1,5) /-1,-1, 1, 1, 1/
      DATA (NHEL(I,   9),I=1,5) /-1, 1,-1,-1,-1/
      DATA (NHEL(I,  10),I=1,5) /-1, 1,-1,-1, 1/
      DATA (NHEL(I,  11),I=1,5) /-1, 1,-1, 1,-1/
      DATA (NHEL(I,  12),I=1,5) /-1, 1,-1, 1, 1/
      DATA (NHEL(I,  13),I=1,5) /-1, 1, 1,-1,-1/
      DATA (NHEL(I,  14),I=1,5) /-1, 1, 1,-1, 1/
      DATA (NHEL(I,  15),I=1,5) /-1, 1, 1, 1,-1/
      DATA (NHEL(I,  16),I=1,5) /-1, 1, 1, 1, 1/
      DATA (NHEL(I,  17),I=1,5) / 1,-1,-1,-1,-1/
      DATA (NHEL(I,  18),I=1,5) / 1,-1,-1,-1, 1/
      DATA (NHEL(I,  19),I=1,5) / 1,-1,-1, 1,-1/
      DATA (NHEL(I,  20),I=1,5) / 1,-1,-1, 1, 1/
      DATA (NHEL(I,  21),I=1,5) / 1,-1, 1,-1,-1/
      DATA (NHEL(I,  22),I=1,5) / 1,-1, 1,-1, 1/
      DATA (NHEL(I,  23),I=1,5) / 1,-1, 1, 1,-1/
      DATA (NHEL(I,  24),I=1,5) / 1,-1, 1, 1, 1/
      DATA (NHEL(I,  25),I=1,5) / 1, 1,-1,-1,-1/
      DATA (NHEL(I,  26),I=1,5) / 1, 1,-1,-1, 1/
      DATA (NHEL(I,  27),I=1,5) / 1, 1,-1, 1,-1/
      DATA (NHEL(I,  28),I=1,5) / 1, 1,-1, 1, 1/
      DATA (NHEL(I,  29),I=1,5) / 1, 1, 1,-1,-1/
      DATA (NHEL(I,  30),I=1,5) / 1, 1, 1,-1, 1/
      DATA (NHEL(I,  31),I=1,5) / 1, 1, 1, 1,-1/
      DATA (NHEL(I,  32),I=1,5) / 1, 1, 1, 1, 1/
      DATA IDEN/1536/
      include 'cparam.inc'
C     ----------
C     BEGIN CODE
C     ----------
      NTRY=NTRY+1
      DO IHEL=1,NEXTERNAL
        JC(IHEL) = +1
      ENDDO
      ANS = 0D0
      do i=1,nwgt
         AA(i) = 0d0
      enddo
      DO IHEL=1,NCOMB
        IF (GOODHEL(IHEL) .OR. NTRY .LT. 2) THEN
          T=MATRIX_MG(P ,NHEL(1,IHEL),JC(1))
          ANS=ANS+T
          IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL)) THEN
            GOODHEL(IHEL)=.TRUE.
          ENDIF
        ENDIF
      ENDDO
      ANS=ANS/DBLE(IDEN)
      END


      REAL*8 FUNCTION MATRIX_MG(P,NHEL,IC)
C     
C     Generated by MadGraph 5 v. 1.3.17, 2011-09-30
C     By the MadGraph Development Team
C     Please visit us at https://launchpad.net/madgraph5
C     
C     Returns amplitude squared summed/avg over colors
C     for the point with external lines W(0:6,NEXTERNAL)
C     
C     Process: g g > g g g WEIGHTED=3
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=45)
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
      INTEGER    NWAVEFUNCS, NCOLOR
      PARAMETER (NWAVEFUNCS=33, NCOLOR=24)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      COMPLEX*16 IMAG1
      PARAMETER (IMAG1=(0D0,1D0))
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C     
C     LOCAL VARIABLES 
C     
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
      COMPLEX*16 DUM0,DUM1
      DATA DUM0, DUM1/(0D0, 0D0), (1D0, 0D0)/
C     
C     GLOBAL VARIABLES
C     
      INCLUDE 'coupl.inc'
C     
C     COLOR DATA
C     
      DATA DENOM(1)/108/
      DATA (CF(I,  1),I=  1,  6) /  455,  -58,  -58,   14,   14,   68/
      DATA (CF(I,  1),I=  7, 12) /  -58,   -4,   14,  -58,    5,   -4/
      DATA (CF(I,  1),I= 13, 18) /   14,    5,   68,   -4,   14,   68/
      DATA (CF(I,  1),I= 19, 24) /  -58,   -4,   -4,   68,   68,  -40/
C     1 Tr(1,2,3,4,5)
      DATA DENOM(2)/108/
      DATA (CF(I,  2),I=  1,  6) /  -58,  455,   14,   68,  -58,   14/
      DATA (CF(I,  2),I=  7, 12) /   -4,  -58,    5,   -4,   14,  -58/
      DATA (CF(I,  2),I= 13, 18) /  -58,   -4,   -4,   68,   68,  -40/
      DATA (CF(I,  2),I= 19, 24) /   14,    5,   68,   -4,   14,   68/
C     1 Tr(1,2,3,5,4)
      DATA DENOM(3)/108/
      DATA (CF(I,  3),I=  1,  6) /  -58,   14,  455,  -58,   68,   14/
      DATA (CF(I,  3),I=  7, 12) /   14,    5,   68,   -4,   14,   68/
      DATA (CF(I,  3),I= 13, 18) /  -58,   -4,   14,  -58,    5,   -4/
      DATA (CF(I,  3),I= 19, 24) /   -4,  -58,   68,  -40,   -4,   68/
C     1 Tr(1,2,4,3,5)
      DATA DENOM(4)/108/
      DATA (CF(I,  4),I=  1,  6) /   14,   68,  -58,  455,   14,  -58/
      DATA (CF(I,  4),I=  7, 12) /  -58,   -4,   -4,   68,   68,  -40/
      DATA (CF(I,  4),I= 13, 18) /   -4,  -58,    5,   -4,   14,  -58/
      DATA (CF(I,  4),I= 19, 24) /    5,   14,   14,   68,   68,   -4/
C     1 Tr(1,2,4,5,3)
      DATA DENOM(5)/108/
      DATA (CF(I,  5),I=  1,  6) /   14,  -58,   68,   14,  455,  -58/
      DATA (CF(I,  5),I=  7, 12) /    5,   14,   14,   68,   68,   -4/
      DATA (CF(I,  5),I= 13, 18) /   -4,  -58,   68,  -40,   -4,   68/
      DATA (CF(I,  5),I= 19, 24) /  -58,   -4,   14,  -58,    5,   -4/
C     1 Tr(1,2,5,3,4)
      DATA DENOM(6)/108/
      DATA (CF(I,  6),I=  1,  6) /   68,   14,   14,  -58,  -58,  455/
      DATA (CF(I,  6),I=  7, 12) /   -4,  -58,   68,  -40,   -4,   68/
      DATA (CF(I,  6),I= 13, 18) /    5,   14,   14,   68,   68,   -4/
      DATA (CF(I,  6),I= 19, 24) /   -4,  -58,    5,   -4,   14,  -58/
C     1 Tr(1,2,5,4,3)
      DATA DENOM(7)/108/
      DATA (CF(I,  7),I=  1,  6) /  -58,   -4,   14,  -58,    5,   -4/
      DATA (CF(I,  7),I=  7, 12) /  455,  -58,  -58,   14,   14,   68/
      DATA (CF(I,  7),I= 13, 18) /   68,   -4,   14,    5,   68,   14/
      DATA (CF(I,  7),I= 19, 24) /   -4,   68,  -58,   -4,  -40,   68/
C     1 Tr(1,3,2,4,5)
      DATA DENOM(8)/108/
      DATA (CF(I,  8),I=  1,  6) /   -4,  -58,    5,   -4,   14,  -58/
      DATA (CF(I,  8),I=  7, 12) /  -58,  455,   14,   68,  -58,   14/
      DATA (CF(I,  8),I= 13, 18) /   -4,   68,  -58,   -4,  -40,   68/
      DATA (CF(I,  8),I= 19, 24) /   68,   -4,   14,    5,   68,   14/
C     1 Tr(1,3,2,5,4)
      DATA DENOM(9)/108/
      DATA (CF(I,  9),I=  1,  6) /   14,    5,   68,   -4,   14,   68/
      DATA (CF(I,  9),I=  7, 12) /  -58,   14,  455,  -58,   68,   14/
      DATA (CF(I,  9),I= 13, 18) /   14,  -58,  -58,   -4,   -4,    5/
      DATA (CF(I,  9),I= 19, 24) /   68,  -40,   -4,  -58,   68,   -4/
C     1 Tr(1,3,4,2,5)
      DATA DENOM(10)/108/
      DATA (CF(I, 10),I=  1,  6) /  -58,   -4,   -4,   68,   68,  -40/
      DATA (CF(I, 10),I=  7, 12) /   14,   68,  -58,  455,   14,  -58/
      DATA (CF(I, 10),I= 13, 18) /    5,   -4,   -4,  -58,  -58,   14/
      DATA (CF(I, 10),I= 19, 24) /   14,   68,    5,   14,   -4,   68/
C     1 Tr(1,3,4,5,2)
      DATA DENOM(11)/108/
      DATA (CF(I, 11),I=  1,  6) /    5,   14,   14,   68,   68,   -4/
      DATA (CF(I, 11),I=  7, 12) /   14,  -58,   68,   14,  455,  -58/
      DATA (CF(I, 11),I= 13, 18) /   68,  -40,   -4,  -58,   68,   -4/
      DATA (CF(I, 11),I= 19, 24) /   14,  -58,  -58,   -4,   -4,    5/
C     1 Tr(1,3,5,2,4)
      DATA DENOM(12)/108/
      DATA (CF(I, 12),I=  1,  6) /   -4,  -58,   68,  -40,   -4,   68/
      DATA (CF(I, 12),I=  7, 12) /   68,   14,   14,  -58,  -58,  455/
      DATA (CF(I, 12),I= 13, 18) /   14,   68,    5,   14,   -4,   68/
      DATA (CF(I, 12),I= 19, 24) /    5,   -4,   -4,  -58,  -58,   14/
C     1 Tr(1,3,5,4,2)
      DATA DENOM(13)/108/
      DATA (CF(I, 13),I=  1,  6) /   14,  -58,  -58,   -4,   -4,    5/
      DATA (CF(I, 13),I=  7, 12) /   68,   -4,   14,    5,   68,   14/
      DATA (CF(I, 13),I= 13, 18) /  455,  -58,  -58,   14,   14,   68/
      DATA (CF(I, 13),I= 19, 24) /   68,   -4,  -40,   68,  -58,   -4/
C     1 Tr(1,4,2,3,5)
      DATA DENOM(14)/108/
      DATA (CF(I, 14),I=  1,  6) /    5,   -4,   -4,  -58,  -58,   14/
      DATA (CF(I, 14),I=  7, 12) /   -4,   68,  -58,   -4,  -40,   68/
      DATA (CF(I, 14),I= 13, 18) /  -58,  455,   14,   68,  -58,   14/
      DATA (CF(I, 14),I= 19, 24) /   -4,   68,   68,   14,   14,    5/
C     1 Tr(1,4,2,5,3)
      DATA DENOM(15)/108/
      DATA (CF(I, 15),I=  1,  6) /   68,   -4,   14,    5,   68,   14/
      DATA (CF(I, 15),I=  7, 12) /   14,  -58,  -58,   -4,   -4,    5/
      DATA (CF(I, 15),I= 13, 18) /  -58,   14,  455,  -58,   68,   14/
      DATA (CF(I, 15),I= 19, 24) /  -40,   68,   68,   -4,   -4,  -58/
C     1 Tr(1,4,3,2,5)
      DATA DENOM(16)/108/
      DATA (CF(I, 16),I=  1,  6) /   -4,   68,  -58,   -4,  -40,   68/
      DATA (CF(I, 16),I=  7, 12) /    5,   -4,   -4,  -58,  -58,   14/
      DATA (CF(I, 16),I= 13, 18) /   14,   68,  -58,  455,   14,  -58/
      DATA (CF(I, 16),I= 19, 24) /   68,   14,   -4,   68,    5,   14/
C     1 Tr(1,4,3,5,2)
      DATA DENOM(17)/108/
      DATA (CF(I, 17),I=  1,  6) /   14,   68,    5,   14,   -4,   68/
      DATA (CF(I, 17),I=  7, 12) /   68,  -40,   -4,  -58,   68,   -4/
      DATA (CF(I, 17),I= 13, 18) /   14,  -58,   68,   14,  455,  -58/
      DATA (CF(I, 17),I= 19, 24) /  -58,   14,   -4,    5,  -58,   -4/
C     1 Tr(1,4,5,2,3)
      DATA DENOM(18)/108/
      DATA (CF(I, 18),I=  1,  6) /   68,  -40,   -4,  -58,   68,   -4/
      DATA (CF(I, 18),I=  7, 12) /   14,   68,    5,   14,   -4,   68/
      DATA (CF(I, 18),I= 13, 18) /   68,   14,   14,  -58,  -58,  455/
      DATA (CF(I, 18),I= 19, 24) /   -4,    5,  -58,   14,   -4,  -58/
C     1 Tr(1,4,5,3,2)
      DATA DENOM(19)/108/
      DATA (CF(I, 19),I=  1,  6) /  -58,   14,   -4,    5,  -58,   -4/
      DATA (CF(I, 19),I=  7, 12) /   -4,   68,   68,   14,   14,    5/
      DATA (CF(I, 19),I= 13, 18) /   68,   -4,  -40,   68,  -58,   -4/
      DATA (CF(I, 19),I= 19, 24) /  455,  -58,  -58,   14,   14,   68/
C     1 Tr(1,5,2,3,4)
      DATA DENOM(20)/108/
      DATA (CF(I, 20),I=  1,  6) /   -4,    5,  -58,   14,   -4,  -58/
      DATA (CF(I, 20),I=  7, 12) /   68,   -4,  -40,   68,  -58,   -4/
      DATA (CF(I, 20),I= 13, 18) /   -4,   68,   68,   14,   14,    5/
      DATA (CF(I, 20),I= 19, 24) /  -58,  455,   14,   68,  -58,   14/
C     1 Tr(1,5,2,4,3)
      DATA DENOM(21)/108/
      DATA (CF(I, 21),I=  1,  6) /   -4,   68,   68,   14,   14,    5/
      DATA (CF(I, 21),I=  7, 12) /  -58,   14,   -4,    5,  -58,   -4/
      DATA (CF(I, 21),I= 13, 18) /  -40,   68,   68,   -4,   -4,  -58/
      DATA (CF(I, 21),I= 19, 24) /  -58,   14,  455,  -58,   68,   14/
C     1 Tr(1,5,3,2,4)
      DATA DENOM(22)/108/
      DATA (CF(I, 22),I=  1,  6) /   68,   -4,  -40,   68,  -58,   -4/
      DATA (CF(I, 22),I=  7, 12) /   -4,    5,  -58,   14,   -4,  -58/
      DATA (CF(I, 22),I= 13, 18) /   68,   14,   -4,   68,    5,   14/
      DATA (CF(I, 22),I= 19, 24) /   14,   68,  -58,  455,   14,  -58/
C     1 Tr(1,5,3,4,2)
      DATA DENOM(23)/108/
      DATA (CF(I, 23),I=  1,  6) /   68,   14,   -4,   68,    5,   14/
      DATA (CF(I, 23),I=  7, 12) /  -40,   68,   68,   -4,   -4,  -58/
      DATA (CF(I, 23),I= 13, 18) /  -58,   14,   -4,    5,  -58,   -4/
      DATA (CF(I, 23),I= 19, 24) /   14,  -58,   68,   14,  455,  -58/
C     1 Tr(1,5,4,2,3)
      DATA DENOM(24)/108/
      DATA (CF(I, 24),I=  1,  6) /  -40,   68,   68,   -4,   -4,  -58/
      DATA (CF(I, 24),I=  7, 12) /   68,   14,   -4,   68,    5,   14/
      DATA (CF(I, 24),I= 13, 18) /   -4,    5,  -58,   14,   -4,  -58/
      DATA (CF(I, 24),I= 19, 24) /   68,   14,   14,  -58,  -58,  455/
C     1 Tr(1,5,4,3,2)
      include 'cparam.inc'
C     ----------
C     BEGIN CODE
C     ----------
c      GC_4 = (-1.46676145d0,0d0)
c      GC_6 = (0d0,2.15138915d0)
      CALL VXXXXX(P(0,1),ZERO,NHEL(1),-1*IC(1),W(1,1))
      CALL VXXXXX(P(0,2),ZERO,NHEL(2),-1*IC(2),W(1,2))
      CALL VXXXXX(P(0,3),ZERO,NHEL(3),+1*IC(3),W(1,3))
      CALL VXXXXX(P(0,4),ZERO,NHEL(4),+1*IC(4),W(1,4))
      CALL VXXXXX(P(0,5),ZERO,NHEL(5),+1*IC(5),W(1,5))
      CALL VVV1_1(W(1,1),W(1,2),GC_4,ZERO, ZERO, W(1,6))
      CALL VVV1_1(W(1,3),W(1,4),GC_4,ZERO, ZERO, W(1,7))
C     Amplitude(s) for diagram number 1
      CALL VVV1_0(W(1,6),W(1,7),W(1,5),GC_4,AMP(1))
      CALL VVV1_1(W(1,3),W(1,5),GC_4,ZERO, ZERO, W(1,8))
C     Amplitude(s) for diagram number 2
      CALL VVV1_0(W(1,6),W(1,8),W(1,4),GC_4,AMP(2))
      CALL VVV1_1(W(1,4),W(1,5),GC_4,ZERO, ZERO, W(1,9))
C     Amplitude(s) for diagram number 3
      CALL VVV1_0(W(1,6),W(1,3),W(1,9),GC_4,AMP(3))
C     Amplitude(s) for diagram number 4
      CALL VVVV1_0(W(1,3),W(1,4),W(1,5),W(1,6),GC_6,AMP(4))
      CALL VVVV3_0(W(1,3),W(1,4),W(1,5),W(1,6),GC_6,AMP(5))
      CALL VVVV4_0(W(1,3),W(1,4),W(1,5),W(1,6),GC_6,AMP(6))
      CALL VVV1_1(W(1,1),W(1,3),GC_4,ZERO, ZERO, W(1,10))
      CALL VVV1_1(W(1,2),W(1,4),GC_4,ZERO, ZERO, W(1,11))
C     Amplitude(s) for diagram number 5
      CALL VVV1_0(W(1,10),W(1,11),W(1,5),GC_4,AMP(7))
      CALL VVV1_1(W(1,2),W(1,5),GC_4,ZERO, ZERO, W(1,12))
C     Amplitude(s) for diagram number 6
      CALL VVV1_0(W(1,10),W(1,12),W(1,4),GC_4,AMP(8))
C     Amplitude(s) for diagram number 7
      CALL VVV1_0(W(1,10),W(1,2),W(1,9),GC_4,AMP(9))
C     Amplitude(s) for diagram number 8
      CALL VVVV1_0(W(1,2),W(1,4),W(1,5),W(1,10),GC_6,AMP(10))
      CALL VVVV3_0(W(1,2),W(1,4),W(1,5),W(1,10),GC_6,AMP(11))
      CALL VVVV4_0(W(1,2),W(1,4),W(1,5),W(1,10),GC_6,AMP(12))
      CALL VVV1_1(W(1,1),W(1,4),GC_4,ZERO, ZERO, W(1,13))
      CALL VVV1_1(W(1,2),W(1,3),GC_4,ZERO, ZERO, W(1,14))
C     Amplitude(s) for diagram number 9
      CALL VVV1_0(W(1,13),W(1,14),W(1,5),GC_4,AMP(13))
C     Amplitude(s) for diagram number 10
      CALL VVV1_0(W(1,13),W(1,12),W(1,3),GC_4,AMP(14))
C     Amplitude(s) for diagram number 11
      CALL VVV1_0(W(1,13),W(1,2),W(1,8),GC_4,AMP(15))
C     Amplitude(s) for diagram number 12
      CALL VVVV1_0(W(1,2),W(1,3),W(1,5),W(1,13),GC_6,AMP(16))
      CALL VVVV3_0(W(1,2),W(1,3),W(1,5),W(1,13),GC_6,AMP(17))
      CALL VVVV4_0(W(1,2),W(1,3),W(1,5),W(1,13),GC_6,AMP(18))
      CALL VVV1_1(W(1,1),W(1,5),GC_4,ZERO, ZERO, W(1,15))
C     Amplitude(s) for diagram number 13
      CALL VVV1_0(W(1,15),W(1,14),W(1,4),GC_4,AMP(19))
C     Amplitude(s) for diagram number 14
      CALL VVV1_0(W(1,15),W(1,11),W(1,3),GC_4,AMP(20))
C     Amplitude(s) for diagram number 15
      CALL VVV1_0(W(1,15),W(1,2),W(1,7),GC_4,AMP(21))
C     Amplitude(s) for diagram number 16
      CALL VVVV1_0(W(1,2),W(1,3),W(1,4),W(1,15),GC_6,AMP(22))
      CALL VVVV3_0(W(1,2),W(1,3),W(1,4),W(1,15),GC_6,AMP(23))
      CALL VVVV4_0(W(1,2),W(1,3),W(1,4),W(1,15),GC_6,AMP(24))
C     Amplitude(s) for diagram number 17
      CALL VVV1_0(W(1,1),W(1,14),W(1,9),GC_4,AMP(25))
C     Amplitude(s) for diagram number 18
      CALL VVV1_0(W(1,1),W(1,11),W(1,8),GC_4,AMP(26))
C     Amplitude(s) for diagram number 19
      CALL VVV1_0(W(1,1),W(1,12),W(1,7),GC_4,AMP(27))
      CALL VVVV1_1(W(1,1),W(1,2),W(1,3),GC_6,ZERO, ZERO, W(1,16))
      CALL VVVV3_1(W(1,1),W(1,2),W(1,3),GC_6,ZERO, ZERO, W(1,17))
      CALL VVVV4_1(W(1,1),W(1,2),W(1,3),GC_6,ZERO, ZERO, W(1,18))
C     Amplitude(s) for diagram number 20
      CALL VVV1_0(W(1,4),W(1,5),W(1,16),GC_4,AMP(28))
      CALL VVV1_0(W(1,4),W(1,5),W(1,17),GC_4,AMP(29))
      CALL VVV1_0(W(1,4),W(1,5),W(1,18),GC_4,AMP(30))
      CALL VVVV1_1(W(1,1),W(1,2),W(1,4),GC_6,ZERO, ZERO, W(1,19))
      CALL VVVV3_1(W(1,1),W(1,2),W(1,4),GC_6,ZERO, ZERO, W(1,20))
      CALL VVVV4_1(W(1,1),W(1,2),W(1,4),GC_6,ZERO, ZERO, W(1,21))
C     Amplitude(s) for diagram number 21
      CALL VVV1_0(W(1,3),W(1,5),W(1,19),GC_4,AMP(31))
      CALL VVV1_0(W(1,3),W(1,5),W(1,20),GC_4,AMP(32))
      CALL VVV1_0(W(1,3),W(1,5),W(1,21),GC_4,AMP(33))
      CALL VVVV1_1(W(1,1),W(1,2),W(1,5),GC_6,ZERO, ZERO, W(1,22))
      CALL VVVV3_1(W(1,1),W(1,2),W(1,5),GC_6,ZERO, ZERO, W(1,23))
      CALL VVVV4_1(W(1,1),W(1,2),W(1,5),GC_6,ZERO, ZERO, W(1,24))
C     Amplitude(s) for diagram number 22
      CALL VVV1_0(W(1,3),W(1,4),W(1,22),GC_4,AMP(34))
      CALL VVV1_0(W(1,3),W(1,4),W(1,23),GC_4,AMP(35))
      CALL VVV1_0(W(1,3),W(1,4),W(1,24),GC_4,AMP(36))
      CALL VVVV1_1(W(1,1),W(1,3),W(1,4),GC_6,ZERO, ZERO, W(1,25))
      CALL VVVV3_1(W(1,1),W(1,3),W(1,4),GC_6,ZERO, ZERO, W(1,26))
      CALL VVVV4_1(W(1,1),W(1,3),W(1,4),GC_6,ZERO, ZERO, W(1,27))
C     Amplitude(s) for diagram number 23
      CALL VVV1_0(W(1,2),W(1,5),W(1,25),GC_4,AMP(37))
      CALL VVV1_0(W(1,2),W(1,5),W(1,26),GC_4,AMP(38))
      CALL VVV1_0(W(1,2),W(1,5),W(1,27),GC_4,AMP(39))
      CALL VVVV1_1(W(1,1),W(1,3),W(1,5),GC_6,ZERO, ZERO, W(1,28))
      CALL VVVV3_1(W(1,1),W(1,3),W(1,5),GC_6,ZERO, ZERO, W(1,29))
      CALL VVVV4_1(W(1,1),W(1,3),W(1,5),GC_6,ZERO, ZERO, W(1,30))
C     Amplitude(s) for diagram number 24
      CALL VVV1_0(W(1,2),W(1,4),W(1,28),GC_4,AMP(40))
      CALL VVV1_0(W(1,2),W(1,4),W(1,29),GC_4,AMP(41))
      CALL VVV1_0(W(1,2),W(1,4),W(1,30),GC_4,AMP(42))
      CALL VVVV1_1(W(1,1),W(1,4),W(1,5),GC_6,ZERO, ZERO, W(1,31))
      CALL VVVV3_1(W(1,1),W(1,4),W(1,5),GC_6,ZERO, ZERO, W(1,32))
      CALL VVVV4_1(W(1,1),W(1,4),W(1,5),GC_6,ZERO, ZERO, W(1,33))
C     Amplitude(s) for diagram number 25
      CALL VVV1_0(W(1,2),W(1,3),W(1,31),GC_4,AMP(43))
      CALL VVV1_0(W(1,2),W(1,3),W(1,32),GC_4,AMP(44))
      CALL VVV1_0(W(1,2),W(1,3),W(1,33),GC_4,AMP(45))
      JAMP(1)=+2*(+IMAG1*AMP(1)+IMAG1*AMP(3)+IMAG1*AMP(4)-IMAG1*AMP(6)
     $ -IMAG1*AMP(19)-IMAG1*AMP(21)-IMAG1*AMP(22)+IMAG1*AMP(24)
     $ +IMAG1*AMP(25)-IMAG1*AMP(30)+IMAG1*AMP(28)+IMAG1*AMP(36)
     $ +IMAG1*AMP(35)-IMAG1*AMP(44)-IMAG1*AMP(43))
      JAMP(2)=+2*(+IMAG1*AMP(2)-IMAG1*AMP(3)+IMAG1*AMP(5)+IMAG1*AMP(6)
     $ -IMAG1*AMP(13)-IMAG1*AMP(15)-IMAG1*AMP(16)+IMAG1*AMP(18)
     $ -IMAG1*AMP(25)+IMAG1*AMP(30)-IMAG1*AMP(28)+IMAG1*AMP(33)
     $ +IMAG1*AMP(32)-IMAG1*AMP(45)+IMAG1*AMP(43))
      JAMP(3)=+2*(-IMAG1*AMP(1)-IMAG1*AMP(2)-IMAG1*AMP(5)-IMAG1*AMP(4)
     $ -IMAG1*AMP(20)+IMAG1*AMP(21)-IMAG1*AMP(23)-IMAG1*AMP(24)
     $ +IMAG1*AMP(26)-IMAG1*AMP(33)+IMAG1*AMP(31)-IMAG1*AMP(36)
     $ -IMAG1*AMP(35)-IMAG1*AMP(41)-IMAG1*AMP(40))
      JAMP(4)=+2*(+IMAG1*AMP(2)-IMAG1*AMP(3)+IMAG1*AMP(5)+IMAG1*AMP(6)
     $ -IMAG1*AMP(7)-IMAG1*AMP(9)-IMAG1*AMP(10)+IMAG1*AMP(12)
     $ -IMAG1*AMP(26)+IMAG1*AMP(30)+IMAG1*AMP(29)+IMAG1*AMP(33)
     $ -IMAG1*AMP(31)-IMAG1*AMP(42)+IMAG1*AMP(40))
      JAMP(5)=+2*(-IMAG1*AMP(1)-IMAG1*AMP(2)-IMAG1*AMP(5)-IMAG1*AMP(4)
     $ -IMAG1*AMP(14)+IMAG1*AMP(15)-IMAG1*AMP(17)-IMAG1*AMP(18)
     $ +IMAG1*AMP(27)-IMAG1*AMP(33)-IMAG1*AMP(32)-IMAG1*AMP(36)
     $ +IMAG1*AMP(34)-IMAG1*AMP(38)-IMAG1*AMP(37))
      JAMP(6)=+2*(+IMAG1*AMP(1)+IMAG1*AMP(3)+IMAG1*AMP(4)-IMAG1*AMP(6)
     $ -IMAG1*AMP(8)+IMAG1*AMP(9)-IMAG1*AMP(11)-IMAG1*AMP(12)
     $ -IMAG1*AMP(27)-IMAG1*AMP(30)-IMAG1*AMP(29)+IMAG1*AMP(36)
     $ -IMAG1*AMP(34)-IMAG1*AMP(39)+IMAG1*AMP(37))
      JAMP(7)=+2*(+IMAG1*AMP(7)+IMAG1*AMP(9)+IMAG1*AMP(10)-IMAG1
     $ *AMP(12)+IMAG1*AMP(19)+IMAG1*AMP(20)+IMAG1*AMP(23)+IMAG1
     $ *AMP(22)-IMAG1*AMP(25)-IMAG1*AMP(29)-IMAG1*AMP(28)+IMAG1
     $ *AMP(42)+IMAG1*AMP(41)+IMAG1*AMP(44)+IMAG1*AMP(43))
      JAMP(8)=+2*(+IMAG1*AMP(8)-IMAG1*AMP(9)+IMAG1*AMP(11)+IMAG1
     $ *AMP(12)+IMAG1*AMP(13)+IMAG1*AMP(14)+IMAG1*AMP(17)+IMAG1
     $ *AMP(16)+IMAG1*AMP(25)+IMAG1*AMP(29)+IMAG1*AMP(28)+IMAG1
     $ *AMP(39)+IMAG1*AMP(38)+IMAG1*AMP(45)-IMAG1*AMP(43))
      JAMP(9)=+2*(-IMAG1*AMP(7)-IMAG1*AMP(8)-IMAG1*AMP(11)-IMAG1
     $ *AMP(10)-IMAG1*AMP(20)+IMAG1*AMP(21)-IMAG1*AMP(23)-IMAG1
     $ *AMP(24)-IMAG1*AMP(27)-IMAG1*AMP(35)-IMAG1*AMP(34)-IMAG1
     $ *AMP(39)+IMAG1*AMP(37)-IMAG1*AMP(42)-IMAG1*AMP(41))
      JAMP(10)=+2*(-IMAG1*AMP(1)-IMAG1*AMP(3)-IMAG1*AMP(4)+IMAG1
     $ *AMP(6)+IMAG1*AMP(8)-IMAG1*AMP(9)+IMAG1*AMP(11)+IMAG1*AMP(12)
     $ +IMAG1*AMP(27)+IMAG1*AMP(30)+IMAG1*AMP(29)-IMAG1*AMP(36)
     $ +IMAG1*AMP(34)+IMAG1*AMP(39)-IMAG1*AMP(37))
      JAMP(11)=+2*(-IMAG1*AMP(7)-IMAG1*AMP(8)-IMAG1*AMP(11)-IMAG1
     $ *AMP(10)-IMAG1*AMP(14)+IMAG1*AMP(15)-IMAG1*AMP(17)-IMAG1
     $ *AMP(18)-IMAG1*AMP(26)-IMAG1*AMP(32)-IMAG1*AMP(31)-IMAG1
     $ *AMP(39)-IMAG1*AMP(38)-IMAG1*AMP(42)+IMAG1*AMP(40))
      JAMP(12)=+2*(-IMAG1*AMP(2)+IMAG1*AMP(3)-IMAG1*AMP(5)-IMAG1
     $ *AMP(6)+IMAG1*AMP(7)+IMAG1*AMP(9)+IMAG1*AMP(10)-IMAG1*AMP(12)
     $ +IMAG1*AMP(26)-IMAG1*AMP(30)-IMAG1*AMP(29)-IMAG1*AMP(33)
     $ +IMAG1*AMP(31)+IMAG1*AMP(42)-IMAG1*AMP(40))
      JAMP(13)=+2*(+IMAG1*AMP(13)+IMAG1*AMP(15)+IMAG1*AMP(16)
     $ -IMAG1*AMP(18)+IMAG1*AMP(19)+IMAG1*AMP(20)+IMAG1*AMP(23)
     $ +IMAG1*AMP(22)-IMAG1*AMP(26)-IMAG1*AMP(32)-IMAG1*AMP(31)
     $ +IMAG1*AMP(41)+IMAG1*AMP(40)+IMAG1*AMP(45)+IMAG1*AMP(44))
      JAMP(14)=+2*(+IMAG1*AMP(7)+IMAG1*AMP(8)+IMAG1*AMP(11)+IMAG1
     $ *AMP(10)+IMAG1*AMP(14)-IMAG1*AMP(15)+IMAG1*AMP(17)+IMAG1
     $ *AMP(18)+IMAG1*AMP(26)+IMAG1*AMP(32)+IMAG1*AMP(31)+IMAG1
     $ *AMP(39)+IMAG1*AMP(38)+IMAG1*AMP(42)-IMAG1*AMP(40))
      JAMP(15)=+2*(-IMAG1*AMP(13)-IMAG1*AMP(14)-IMAG1*AMP(17)
     $ -IMAG1*AMP(16)-IMAG1*AMP(19)-IMAG1*AMP(21)-IMAG1*AMP(22)
     $ +IMAG1*AMP(24)+IMAG1*AMP(27)+IMAG1*AMP(35)+IMAG1*AMP(34)
     $ -IMAG1*AMP(38)-IMAG1*AMP(37)-IMAG1*AMP(45)-IMAG1*AMP(44))
      JAMP(16)=+2*(+IMAG1*AMP(1)+IMAG1*AMP(2)+IMAG1*AMP(5)+IMAG1
     $ *AMP(4)+IMAG1*AMP(14)-IMAG1*AMP(15)+IMAG1*AMP(17)+IMAG1*AMP(18)
     $ -IMAG1*AMP(27)+IMAG1*AMP(33)+IMAG1*AMP(32)+IMAG1*AMP(36)
     $ -IMAG1*AMP(34)+IMAG1*AMP(38)+IMAG1*AMP(37))
      JAMP(17)=+2*(-IMAG1*AMP(8)+IMAG1*AMP(9)-IMAG1*AMP(11)-IMAG1
     $ *AMP(12)-IMAG1*AMP(13)-IMAG1*AMP(14)-IMAG1*AMP(17)-IMAG1
     $ *AMP(16)-IMAG1*AMP(25)-IMAG1*AMP(29)-IMAG1*AMP(28)-IMAG1
     $ *AMP(39)-IMAG1*AMP(38)-IMAG1*AMP(45)+IMAG1*AMP(43))
      JAMP(18)=+2*(-IMAG1*AMP(2)+IMAG1*AMP(3)-IMAG1*AMP(5)-IMAG1
     $ *AMP(6)+IMAG1*AMP(13)+IMAG1*AMP(15)+IMAG1*AMP(16)-IMAG1*AMP(18)
     $ +IMAG1*AMP(25)-IMAG1*AMP(30)+IMAG1*AMP(28)-IMAG1*AMP(33)
     $ -IMAG1*AMP(32)+IMAG1*AMP(45)-IMAG1*AMP(43))
      JAMP(19)=+2*(+IMAG1*AMP(13)+IMAG1*AMP(14)+IMAG1*AMP(17)
     $ +IMAG1*AMP(16)+IMAG1*AMP(19)+IMAG1*AMP(21)+IMAG1*AMP(22)
     $ -IMAG1*AMP(24)-IMAG1*AMP(27)-IMAG1*AMP(35)-IMAG1*AMP(34)
     $ +IMAG1*AMP(38)+IMAG1*AMP(37)+IMAG1*AMP(45)+IMAG1*AMP(44))
      JAMP(20)=+2*(+IMAG1*AMP(7)+IMAG1*AMP(8)+IMAG1*AMP(11)+IMAG1
     $ *AMP(10)+IMAG1*AMP(20)-IMAG1*AMP(21)+IMAG1*AMP(23)+IMAG1
     $ *AMP(24)+IMAG1*AMP(27)+IMAG1*AMP(35)+IMAG1*AMP(34)+IMAG1
     $ *AMP(39)-IMAG1*AMP(37)+IMAG1*AMP(42)+IMAG1*AMP(41))
      JAMP(21)=+2*(-IMAG1*AMP(13)-IMAG1*AMP(15)-IMAG1*AMP(16)
     $ +IMAG1*AMP(18)-IMAG1*AMP(19)-IMAG1*AMP(20)-IMAG1*AMP(23)
     $ -IMAG1*AMP(22)+IMAG1*AMP(26)+IMAG1*AMP(32)+IMAG1*AMP(31)
     $ -IMAG1*AMP(41)-IMAG1*AMP(40)-IMAG1*AMP(45)-IMAG1*AMP(44))
      JAMP(22)=+2*(+IMAG1*AMP(1)+IMAG1*AMP(2)+IMAG1*AMP(5)+IMAG1
     $ *AMP(4)+IMAG1*AMP(20)-IMAG1*AMP(21)+IMAG1*AMP(23)+IMAG1*AMP(24)
     $ -IMAG1*AMP(26)+IMAG1*AMP(33)-IMAG1*AMP(31)+IMAG1*AMP(36)
     $ +IMAG1*AMP(35)+IMAG1*AMP(41)+IMAG1*AMP(40))
      JAMP(23)=+2*(-IMAG1*AMP(7)-IMAG1*AMP(9)-IMAG1*AMP(10)+IMAG1
     $ *AMP(12)-IMAG1*AMP(19)-IMAG1*AMP(20)-IMAG1*AMP(23)-IMAG1
     $ *AMP(22)+IMAG1*AMP(25)+IMAG1*AMP(29)+IMAG1*AMP(28)-IMAG1
     $ *AMP(42)-IMAG1*AMP(41)-IMAG1*AMP(44)-IMAG1*AMP(43))
      JAMP(24)=+2*(-IMAG1*AMP(1)-IMAG1*AMP(3)-IMAG1*AMP(4)+IMAG1
     $ *AMP(6)+IMAG1*AMP(19)+IMAG1*AMP(21)+IMAG1*AMP(22)-IMAG1*AMP(24)
     $ -IMAG1*AMP(25)+IMAG1*AMP(30)-IMAG1*AMP(28)-IMAG1*AMP(36)
     $ -IMAG1*AMP(35)+IMAG1*AMP(44)+IMAG1*AMP(43))

      MATRIX_MG = 0.D0
      DO I = 1, NCOLOR
        ZTEMP = (0.D0,0.D0)
        DO J = 1, NCOLOR
          ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
        ENDDO
        MATRIX_MG = MATRIX_MG+ZTEMP*DCONJG(JAMP(I))/DENOM(I)
      ENDDO

      AA(1) = AA(1) +AMP(8)*DCONJG(AMP(8)) ! 1: (3,4,5)
      AA(2) = AA(2) +AMP(7)*DCONJG(AMP(7)) ! 2: (3,5,4)
      AA(3) = AA(3) +AMP(14)*DCONJG(AMP(14)) ! 3: (4,3,5)
      AA(4) = AA(4) +AMP(13)*DCONJG(AMP(13)) ! 4: (4,5,3)
      AA(5) = AA(5) +AMP(20)*DCONJG(AMP(20)) ! 5: (5,3,4)
      AA(6) = AA(6) +AMP(19)*DCONJG(AMP(19)) ! 6: (5,4,3)
      AA(7) = AA(7) +AMP(9)*DCONJG(AMP(9)) ! 7: (3,(4,5))
      AA(8) = AA(8) +AMP(15)*DCONJG(AMP(15)) ! 8: (4,(3,5))
      AA(9) = AA(9) +AMP(21)*DCONJG(AMP(21)) ! 9: (5,(3,4))
      AA(10) = AA(10) +AMP(25)*DCONJG(AMP(25)) ! 10: ((4,5),3)
      AA(11) = AA(11) +AMP(26)*DCONJG(AMP(26)) ! 11: ((3,5),4)
      AA(12) = AA(12) +AMP(27)*DCONJG(AMP(27)) ! 12: ((3,4),5)
      
      do i = 1,6
         CH(i) =  AA(2)
      enddo
      do i = 7,9
         CH(i) =  AA(9)
      enddo
      do i = 10,12
         CH(i) =  AA(12)
      enddo

      END
